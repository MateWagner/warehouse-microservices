version: '3.8'
services:
  app:
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/api-gateway.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - warehouse-service
      - checkout-service
      - keycloak
      - redis

  database:
    image: postgres:alpine3.17
    restart: unless-stopped
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: dbpassword
      POSTGRES_DB: warehouse
    networks:
      - default

  keycloak:
    image: keycloak/keycloak:22.0
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
      - --proxy=edge
      - --hostname-strict-https=false
      - --import-realm
      - --http-relative-path=/auth
      - --hostname-debug=true
    networks:
      - default

  redis:
    image: redis:latest
    command: redis-server
    volumes:
      - ./redis/data:/var/lib/redis
    networks:
      - default

  rabbitmq:
    image: rabbitmq:management-alpine
    ports:
        - 15670:15672
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    networks:
      - default

  warehouse-service:
    build:
      context: ./warehouse-service
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - database
      - keycloak
    environment:
      SERVER_PORT: 8080
      # LOGGING_LEVEL_ROOT: DEBUG
      CHECKOUT_API_URL-PREFIX: http://app/checkout
      SERVER_USE-FORWARD-HEADERS: true
      SPRING_DATASOURCE_USERNAME: dbuser
      SPRING_DATASOURCE_PASSWORD: dbpassword
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/warehouse
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_TOKEN_URI: http://app/auth/realms/warehouse-microservices/protocol/openid-connect/token
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://app/auth/realms/warehouse-microservices
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://app/auth/realms/warehouse-microservices
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: http://app/auth/realms/warehouse-microservices/protocol/openid-connect/certs
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: TRACE
    networks:
      - default

  checkout-service:
    build:
      context: ./checkout-service
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - database
      - keycloak
      - redis
      - rabbitmq
    environment:
      SPRING_PROFILES_ACTIVE: DEV
      SPRING_DATA_REDIS_DATABASE: 0
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SERVER_PORT: 8080
      # LOGGING_LEVEL_ROOT: DEBUG
      WAREHOUSE_API_URL-PREFIX: http://app/warehouse
      SERVER_USE-FORWARD-HEADERS: true
      SPRING_DATASOURCE_USERNAME: dbuser
      SPRING_DATASOURCE_PASSWORD: dbpassword
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/warehouse
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_TOKEN_URI: http://app/auth/realms/warehouse-microservices/protocol/openid-connect/token
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://app/auth/realms/warehouse-microservices
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://app/auth/realms/warehouse-microservices
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: http://app/auth/realms/warehouse-microservices/protocol/openid-connect/certs
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: TRACE
    networks:
      - default

  message-service:
    build:
      context: ./message-service
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
     - rabbitmq
    environment:
      SERVER_PORT: 8080
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_PRPERTIES_MAIL_SMTP_AUTH: true
      SPRING_MAIL_PRPERTIES_MAIL_SMTP_STARTTLS_ENABLE: true
      SPRING_MAIL_USERNAME: ${GOOGLE_USERNAME}
      SPRING_MAIL_PASSWORD: ${GOOGLE_APPLICATION_PASSWORD}

networks:
  default:
